#!/usr/bin/python3
# For later use:
import socket
import struct
import sys
from datetime import datetime
# Main method in Python:
if __name__ == "__main__":
    mode = sys.argv[1]
    if mode == "client":
        # TODO: do client stuff
        server = sys.argv[2]
        port = int(sys.argv[3])
        sock = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
        sock.connect((server, port))

        message_size = 1024
        start = datetime.now()
        message_num = 1
        while True:
            message = bytearray(b'\0' * message_size)
            message[:8] = struct.pack('Q', message_num)
            message_num = message_num + 1
            sock.send(message)
        now = datetime.now()
        seconds = (now - start).total_seconds()
        print(seconds)
        pass
    elif mode == "server":
        # TODO: do server stuff
        port = int(sys.argv[2])
        server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        server_socket.bind(("0.0.0.0", port))

        count_loop = 0
        count_size = 0
        message_size = 20
        start = datetime.now()
        last_num = 0
        missing_messages = 0
        while True:
            message, client_adress = server_socket.recvfrom(message_size)
            if len(message) == 0:
                break
            #print(message)
            message_num = struct.unpack('Q', message[0:8])[0]
            missing_messages += message_num - last_num - 1
            last_num = message_num

            count_loop = count_loop + 1
            count_size = count_size + len(message)
            if count_loop % 10000 == 0 and (count_loop+missing_messages) != 0:
                now = datetime.now()
                seconds = (now - start).total_seconds()
                bandwidth = count_size/seconds
               #  print(bandwidth)
                
                # print(missing_messages)
                # print(count_loop)
                missing_percentage = 100 * missing_messages / (count_loop + missing_messages)
                count_loop = 0
                missing_messages = 0
                if missing_percentage != 0:
                    print(missing_percentage)
        now = datetime.now()
        seconds = (now - start).total_seconds()
        print(seconds)
        pass
